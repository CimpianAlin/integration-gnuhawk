// BEGIN GENERATED CODE
/*
 * This file is protected by Copyright. Please refer to the COPYRIGHT file 
 * distributed with this source distribution.
 * 
 * This file is part of GNUHAWK.
 * 
 * GNUHAWK is free software: you can redistribute it and/or modify is under the 
 * terms of the GNU General Public License as published by the Free Software 
 * Foundation, either version 3 of the License, or (at your option) any later 
 * version.
 * 
 * GNUHAWK is distributed in the hope that it will be useful, but WITHOUT ANY 
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS 
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more 
 * details.
 * 
 * You should have received a copy of the GNU General Public License along with 
 * this program.  If not, see http://www.gnu.org/licenses/.
 */
// Identification: $Revision$
package gov.redhawk.ide.codegen.jet.cplusplus.gnuradio.template;

import gov.redhawk.ide.codegen.ImplementationSettings;
import gov.redhawk.ide.codegen.jet.TemplateParameter;
import gov.redhawk.ide.codegen.util.CodegenFileHelper;
import gov.redhawk.model.sca.util.ModelUtil;
import mil.jpeojtrs.sca.scd.SoftwareComponent;
import mil.jpeojtrs.sca.scd.ComponentType;
import mil.jpeojtrs.sca.spd.Implementation;
import mil.jpeojtrs.sca.spd.SoftPkg;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.CoreException;

/**
 * @generated
 */
public class MakefileAmTemplate
{

  protected static String nl;
  public static synchronized MakefileAmTemplate create(String lineSeparator)
  {
    nl = lineSeparator;
    MakefileAmTemplate result = new MakefileAmTemplate();
    nl = null;
    return result;
  }

  public final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "";
  protected final String TEXT_2 = NL + "#" + NL + "# This file is protected by Copyright. Please refer to the COPYRIGHT file " + NL + "# distributed with this source distribution." + NL + "# " + NL + "# This file is part of GNUHAWK." + NL + "# " + NL + "# GNUHAWK is free software: you can redistribute it and/or modify is under the " + NL + "# terms of the GNU General Public License as published by the Free Software " + NL + "# Foundation, either version 3 of the License, or (at your option) any later " + NL + "# version." + NL + "# " + NL + "# GNUHAWK is distributed in the hope that it will be useful, but WITHOUT ANY " + NL + "# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR " + NL + "# A PARTICULAR PURPOSE.  See the GNU General Public License for more details." + NL + "" + NL + "# You should have received a copy of the GNU General Public License along with " + NL + "# this program.  If not, see http://www.gnu.org/licenses/." + NL + "#" + NL + "" + NL + "# Manually set the GNURadio namespace here " + NL + "GR_NAMESPACE =" + NL + "" + NL + "namespacedir = $(prefix)/";
  protected final String TEXT_3 = "/";
  protected final String TEXT_4 = "/$(GR_NAMESPACE)/";
  protected final String TEXT_5 = NL + "versiondir = $(namespacedir)/$(PACKAGE_VERSION)" + NL + "" + NL + "ossieName = ";
  protected final String TEXT_6 = NL + "bindir = $(versiondir)/";
  protected final String TEXT_7 = NL + "bin_PROGRAMS = ";
  protected final String TEXT_8 = NL + NL + "xmldir = $(versiondir)" + NL + "dist_xml_DATA = ";
  protected final String TEXT_9 = " ";
  protected final String TEXT_10 = " ";
  protected final String TEXT_11 = NL + NL + "# Create a \"current\" link to the version just installed" + NL + "install-exec-hook:" + NL + "\tln -fns $(versiondir) $(DESTDIR)$(namespacedir)/current" + NL + "" + NL + "distclean-local:" + NL + "\trm -f config.*" + NL + "\trm -rf autom4te.cache" + NL + "\trm -f acinclude.m4" + NL + "\trm -f aclocal.m4" + NL + "\trm -f configure" + NL + "\trm -f depcomp" + NL + "\trm -f install-sh" + NL + "\trm -f ltmain.sh" + NL + "\trm -f Makefile.in" + NL + "\trm -f missing" + NL + "\trm -rf .deps" + NL + "" + NL + "# Sources, libraries and library directories are auto-included from a file" + NL + "# generated by the REDHAWK IDE. You can remove/modify the following lines if" + NL + "# you wish to manually control these options." + NL + "include $(srcdir)/Makefile.am.ide";
  protected final String TEXT_12 = NL;
  protected final String TEXT_13 = "_SOURCES = $(redhawk_SOURCES_auto)";
  protected final String TEXT_14 = NL;
  protected final String TEXT_15 = "_CXXFLAGS = -Wall $(PROJECTDEPS_CFLAGS) $(BOOST_CPPFLAGS) $(INTERFACEDEPS_CFLAGS) $(redhawk_INCLUDES_auto)";
  protected final String TEXT_16 = NL;
  protected final String TEXT_17 = "_LDADD = $(PROJECTDEPS_LIBS) $(BOOST_LDFLAGS) $(BOOST_THREAD_LIB) $(INTERFACEDEPS_LIBS) $(redhawk_LDADD_auto)";
  protected final String TEXT_18 = NL;
  protected final String TEXT_19 = "_LDFLAGS = -Wall $(redhawk_LDFLAGS_auto)";
  protected final String TEXT_20 = NL;

  /**
   * {@inheritDoc}
   */
  public String generate(Object argument) throws CoreException
  {
    final StringBuffer stringBuffer = new StringBuffer();
     
/*
 * This file is protected by Copyright. Please refer to the COPYRIGHT file 
 * distributed with this source distribution.
 * 
 * This file is part of GNUHAWK.
 * 
 * GNUHAWK is free software: you can redistribute it and/or modify is under the 
 * terms of the GNU General Public License as published by the Free Software 
 * Foundation, either version 3 of the License, or (at your option) any later 
 * version.
 * 
 * GNUHAWK is distributed in the hope that it will be useful, but WITHOUT ANY 
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS 
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more 
 * details.
 * 
 * You should have received a copy of the GNU General Public License along with 
 * this program.  If not, see http://www.gnu.org/licenses/.
 */

    stringBuffer.append(TEXT_1);
     // REDHAWK HEADER 
     
    TemplateParameter template = (TemplateParameter) argument;
    ImplementationSettings implSettings = template.getImplSettings();
    IResource resource = ModelUtil.getResource(implSettings);
    Implementation impl = template.getImpl();
    SoftPkg softPkg = (SoftPkg) impl.eContainer();
    
    String sdrSubDir = "dom";
    String subFolder = "components";

    SoftwareComponent component = softPkg.getDescriptor().getComponent();
    final ComponentType scdComponentType = SoftwareComponent.Util.getWellKnownComponentType(component); 
    if (scdComponentType == ComponentType.DEVICE) {
    	sdrSubDir = "dev";
     	subFolder = "devices";
    } else if (scdComponentType == ComponentType.SERVICE) {
    	sdrSubDir = "dev";
     	subFolder = "services";
    }
    
    String xmlLocation = "";
    for (String temp : implSettings.getOutputDir().split("/")) {
      if (temp.length() > 1) {
        xmlLocation += "../";
      }
    }

    final String fileprefix = CodegenFileHelper.getPreferredFilePrefix(softPkg, implSettings);

    stringBuffer.append(TEXT_2);
    stringBuffer.append(sdrSubDir);
    stringBuffer.append(TEXT_3);
    stringBuffer.append(subFolder);
    stringBuffer.append(TEXT_4);
    stringBuffer.append(resource.getProject().getName());
    stringBuffer.append(TEXT_5);
    stringBuffer.append(fileprefix);
    stringBuffer.append(TEXT_6);
    stringBuffer.append(implSettings.getOutputDir());
    stringBuffer.append(TEXT_7);
    stringBuffer.append(fileprefix);
    stringBuffer.append(TEXT_8);
    stringBuffer.append(xmlLocation);
    stringBuffer.append(ModelUtil.getPrfFileName(softPkg.getPropertyFile()));
    stringBuffer.append(TEXT_9);
    stringBuffer.append(xmlLocation);
    stringBuffer.append(ModelUtil.getScdFileName(softPkg));
    stringBuffer.append(TEXT_10);
    stringBuffer.append(xmlLocation);
    stringBuffer.append(ModelUtil.getSpdFileName(softPkg));
    stringBuffer.append(TEXT_11);
    stringBuffer.append(TEXT_12);
    stringBuffer.append(fileprefix);
    stringBuffer.append(TEXT_13);
    stringBuffer.append(TEXT_14);
    stringBuffer.append(fileprefix);
    stringBuffer.append(TEXT_15);
    stringBuffer.append(TEXT_16);
    stringBuffer.append(fileprefix);
    stringBuffer.append(TEXT_17);
    stringBuffer.append(TEXT_18);
    stringBuffer.append(fileprefix);
    stringBuffer.append(TEXT_19);
    stringBuffer.append(TEXT_20);
    return stringBuffer.toString();
  }
}

// END GENERATED CODE
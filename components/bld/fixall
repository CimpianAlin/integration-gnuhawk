#

#
# fix all component's reconf configure.ac and Makefile.am 
# run from gnuhawk/components directory: bld/fixall
#

ghawk_dir=$(dirname `pwd`)
bld_dir=$ghawk_dir/bld
lbld_dir=`pwd`/bld

relpath() {
back=    
tback=
common_part=$1
while [ "$common_part" != "/" ] && [ "$common_part" != "." ] ; do
  common_part=$(dirname $common_part)
  back="..\/$back"
done
printf $back
}


fix_component() {
    
    cpp_path=$(dirname `find $1 -name "reconf"` )		

    # set relative path to main gnuhawk project bld directory for M4 path
    rpath=$(relpath $cpp_path)"..\/bld"

    printf "Fixing: COMP:%s PATH:%s BLD:%s \n" $i $cpp_path $rpath

    ## generate new reconf script
    cat $lbld_dir/reconf.comp.gold | sed -e "s/@@@GH_M4_PATH@@@/$rpath/" > $cpp_path/reconf
    cat $lbld_dir/configure.ac.comp.gold | sed -e "s/@@@COMPONENT@@@/$1/" > $cpp_path/configure.ac

    # fix makefile to use GNUHAWK_XXX
    # Make sure GNUHAWK_CFAGS hasn't already been added
    grep GNUHAWK_CFLAGS $cpp_path/Makefile.am >& /dev/null
    if [[ $? != 0 ]];
    then
        cat $cpp_path/Makefile.am | sed -e "s/\$(PROJECTDEPS_CFLAGS)/\$(GNUHAWK_CFLAGS) \$(PROJECTDEPS_CFLAGS)/" > $cpp_path/Makefile.fixed
        mv $cpp_path/Makefile.fixed $cpp_path/Makefile.am
    fi
    # Make sure GNUHAWK_LIBS hasn't already been added
    grep GNUHAWK_LIBS $cpp_path/Makefile.am >& /dev/null
    if [[ $? != 0 ]];
    then
        cat $cpp_path/Makefile.am | sed -e "s/\$(PROJECTDEPS_LIBS)/\$(GNUHAWK_LIBS) \$(PROJECTDEPS_LIBS)/" > $cpp_path/Makefile.fixed
        mv $cpp_path/Makefile.fixed $cpp_path/Makefile.am
    fi

}

fix_configure() {
    
    cpp_path=$(dirname `find $1 -name "reconf"` )		

    # set relative path to main gnuhawk project bld directory for M4 path
    rpath=$(relpath $cpp_path)"..\/bld"

    printf "Fixing: COMP:%s PATH:%s BLD:%s \n" $i $cpp_path $rpath

    ## generate new configure.ac script
    cat $lbld_dir/configure.ac.comp.gold | sed -e "s/@@@COMPONENT@@@/$1/" > $cpp_path/configure.ac
}

ignore_list=`cat bld/ignore_fix_dirs`

while read i
do
    # check if directory is in ignore list
    if [[  $ignore_list =~ $i ]]
    then
	printf "Skiping: %s\n" $i
	continue
    fi

    fix_component $i
done <$1


